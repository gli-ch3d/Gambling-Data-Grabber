Data Explanation

>> Goal
> How does AI Gamble if given the opportunity? Data Collection Phase

>> Dataset
> Data is gathered from 'skin.club' a gambling site that gives out skins for the game 'Counter-Strike'
> Method is by opening cases with listed probabilities with shown price points and generates withdrawable skins to be used in-game

>>> Code-Blocks

>> link_generator.py [Update 11/08/24 - Fixed free casesbeing added to the link list]
> Generates 'links.txt' file by looking at the Sitemap.xml on skin.club
> Filters out all un-necessary links and only lists sites with paid-cases

>> skinclub_csv_generator.py [Update 02/04/24 - Fixed non-weapon results being ommitted during scrape]
> Generates 'skinclub_database.csv' by opening each link on 'links.txt' and runs each site on a webdriver via Selenium
> The wedriver than pulls data out from the HTML of the file and creates text, boolean, numeric data and loads it onto the .csv

>> data_munger.py [Update 11/08/24 - Fixed index values being added to CSV to maintian form]
> Output 'skinclub_case_stats.csv' and 'skinclub_database_updated.csv'

>> simulator.py [TO-DO]
> Create a function that can run simulations on each case

>>> CSV Files Legend
> skinclub_database.csv
'''
case    = Case Name
cost    = Cost per Open
type    = Type of Item (Sticker, M4A4, Agent, etc.)
skin    = Skin Name
rarity  = Skin Rarity
wear    = Skin Wear
ST      = Statrack (1 = yes, 0 = no)
price   = Price of Skin
min_val = Minimum Range of Roll to aquire Skin
max_val = Maximum Range of Roll to aquire Skin
odds    = Odds of aquiring item (%)
site    = Link to Case
update  = Last Updated (WIP)
'''
> skinclub_database_processed.csv
'''
case    = Case Name
cost    = Cost per Open
type    = Type of Item (Sticker, M4A4, Agent, etc.)
skin    = Skin Name
rarity  = Skin Rarity
wear    = Skin Wear
ST      = Statrack (1 = yes, 0 = no)
price   = Price of Skin
min_val = Minimum Range of Roll to aquire Skin
max_val = Maximum Range of Roll to aquire Skin
odds    = Odds of aquiring item (%)
site    = Link to Case
update  = Last Updated (WIP)
return  = Return per Skin ($)
return_p= Return per Skin (%)
'''
> Case_Stats.csv
'''
cases               = Case Name
cost                = Cost per Open
ROI                 = Avg Rate of Investment
Outcomes            = Number of Outcomes
Profit_Chance       = Chance to Breakeven/Profit
Profit_Stat         = Minimum Roll to Breakeven/Profit
Min_Return          = Lowest Possible Return ($)
Min_Return_p        = Lowest Possible Return (%)
Avg_loss_return     = Avg Loss on a losing roll ($) 
Avg_loss_return_p   = Avg Loss on a losing roll (%) 
Max_Return          = Maximum Possible Return ($)
Max_Return_p        = Maximum Possible Return (%)
Avg_gain_return     = Avg Gain on a winning roll ($)
Avg_gain_return_p   = Avg Gain on a winning roll (%)
Roll_50             = Theretical 50 roll return ($)
Roll_50_p           = Theretical 50 roll return (%)
Roll_100            = Theretical 100 roll return ($)
Roll_100_p          = Theretical 100 roll return (%)
Roll_1000           = Theretical 1000 roll return ($)
Roll_1000_p         = Theretical 1000 roll return (%)
'''